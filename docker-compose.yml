services:
  # MySQL 데이터베이스 서비스
  mysql:
    image: mysql:8.0
    container_name: library-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: library_db
      MYSQL_USER: libraryuser
      MYSQL_PASSWORD: librarypassword
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password --init-connect='SET NAMES utf8mb4'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - library-network

  # Spring Boot 애플리케이션 서비스
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: library-app
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/library_db?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8&useUnicode=true&connectionCollation=utf8mb4_unicode_ci&sessionVariables=character_set_client=utf8mb4,character_set_results=utf8mb4,character_set_connection=utf8mb4,collation_connection=utf8mb4_unicode_ci&initSQL=SET NAMES utf8mb4
      SPRING_DATASOURCE_USERNAME: libraryuser
      SPRING_DATASOURCE_PASSWORD: librarypassword
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - library-network

  # Next.js 프론트엔드 서비스
  frontend:
    build:
      context: ./library-frontend
      dockerfile: Dockerfile
    container_name: library-frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://app:8080/api/v1
    depends_on:
      - app
    networks:
      - library-network

volumes:
  mysql-data:

networks:
  library-network:
    driver: bridge 